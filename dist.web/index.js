/*! For license information please see index.js.LICENSE.txt */
var domsi;(()=>{"use strict";var n={442:n=>{n.exports='function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/*! For license information please see index.source.js.LICENSE.txt */\nvar domsi;\n\n(function () {\n  "use strict";\n\n  var r = {\n    n: function n(e) {\n      var t = e && e.__esModule ? function () {\n        return e["default"];\n      } : function () {\n        return e;\n      };\n      return r.d(t, {\n        a: t\n      }), t;\n    },\n    d: function d(e, t) {\n      for (var n in t) {\n        r.o(t, n) && !r.o(e, n) && Object.defineProperty(e, n, {\n          enumerable: !0,\n          get: t[n]\n        });\n      }\n    },\n    o: function o(r, e) {\n      return Object.prototype.hasOwnProperty.call(r, e);\n    }\n  },\n      e = {};\n\n  function t(r, e) {\n    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];\n\n    if (!t) {\n      if (Array.isArray(r) || (t = function (r, e) {\n        if (r) {\n          if ("string" == typeof r) return n(r, e);\n          var t = Object.prototype.toString.call(r).slice(8, -1);\n          return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? n(r, e) : void 0;\n        }\n      }(r)) || e && r && "number" == typeof r.length) {\n        t && (r = t);\n\n        var o = 0,\n            i = function i() {};\n\n        return {\n          s: i,\n          n: function n() {\n            return o >= r.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: r[o++]\n            };\n          },\n          e: function e(r) {\n            throw r;\n          },\n          f: i\n        };\n      }\n\n      throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n    }\n\n    var u,\n        a = !0,\n        l = !1;\n    return {\n      s: function s() {\n        t = t.call(r);\n      },\n      n: function n() {\n        var r = t.next();\n        return a = r.done, r;\n      },\n      e: function e(r) {\n        l = !0, u = r;\n      },\n      f: function f() {\n        try {\n          a || null == t["return"] || t["return"]();\n        } finally {\n          if (l) throw u;\n        }\n      }\n    };\n  }\n\n  function n(r, e) {\n    (null == e || e > r.length) && (e = r.length);\n\n    for (var t = 0, n = new Array(e); t < e; t++) {\n      n[t] = r[t];\n    }\n\n    return n;\n  }\n\n  function o(r, e) {\n    if (void 0 === e) return !0;\n    if ("number" == typeof e || "string" == typeof e) return r == e;\n    if ("undefined" == e.type) return null == r;\n    if ("null" == e.type) return null == r;\n    if ("regex" == e.type) return void 0 !== r && new RegExp(e.regex, e.flags).test(r.toString());\n\n    if ("compare" == e.type) {\n      var n = e;\n      return "==" == n.operator ? r == n.value : "!=" == n.operator ? r != n.value : "===" == n.operator ? r === n.value : "!==" == n.operator ? r !== n.value : void 0 !== r && (">" == n.operator ? r > n.value : ">=" == n.operator ? r >= n.value : "<" == n.operator ? r < n.value : "<=" == n.operator && r <= n.value);\n    }\n\n    if ("and" == e.type) {\n      var i,\n          u = t(e.operands);\n\n      try {\n        for (u.s(); !(i = u.n()).done;) {\n          if (!o(r, i.value)) return !1;\n        }\n      } catch (r) {\n        u.e(r);\n      } finally {\n        u.f();\n      }\n\n      return !0;\n    }\n\n    if ("or" == e.type) {\n      var a,\n          l = t(e.operands);\n\n      try {\n        for (l.s(); !(a = l.n()).done;) {\n          if (o(r, a.value)) return !0;\n        }\n      } catch (r) {\n        l.e(r);\n      } finally {\n        l.f();\n      }\n\n      return !1;\n    }\n\n    return "not" == e.type && !o(r, e.operand);\n  }\n\n  function i(r, e) {\n    (null == e || e > r.length) && (e = r.length);\n\n    for (var t = 0, n = new Array(e); t < e; t++) {\n      n[t] = r[t];\n    }\n\n    return n;\n  }\n\n  r.d(e, {\n    "default": function _default() {\n      return or;\n    }\n  });\n  var u,\n      a,\n      l = r.n(null);\n\n  function c(r, e) {\n    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];\n\n    if (!t) {\n      if (Array.isArray(r) || (t = f(r)) || e && r && "number" == typeof r.length) {\n        t && (r = t);\n\n        var _n = 0,\n            o = function o() {};\n\n        return {\n          s: o,\n          n: function n() {\n            return _n >= r.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: r[_n++]\n            };\n          },\n          e: function e(r) {\n            throw r;\n          },\n          f: o\n        };\n      }\n\n      throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n    }\n\n    var i,\n        u = !0,\n        a = !1;\n    return {\n      s: function s() {\n        t = t.call(r);\n      },\n      n: function n() {\n        var r = t.next();\n        return u = r.done, r;\n      },\n      e: function e(r) {\n        a = !0, i = r;\n      },\n      f: function f() {\n        try {\n          u || null == t["return"] || t["return"]();\n        } finally {\n          if (a) throw i;\n        }\n      }\n    };\n  }\n\n  function f(r, e) {\n    if (r) {\n      if ("string" == typeof r) return d(r, e);\n      var t = Object.prototype.toString.call(r).slice(8, -1);\n      return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? d(r, e) : void 0;\n    }\n  }\n\n  function d(r, e) {\n    (null == e || e > r.length) && (e = r.length);\n\n    for (var t = 0, n = new Array(e); t < e; t++) {\n      n[t] = r[t];\n    }\n\n    return n;\n  }\n\n  function s(r, e) {\n    if (void 0 === e) return !0;\n    if (void 0 === r) return !1;\n    if ("number" == typeof e) return !1;\n    if ("string" == typeof e) return p(r, e);\n    if ("undefined" == e.type) return void 0 === r;\n    if ("null" == e.type) return null === r;\n    if ("regex" === e.type) return function () {\n      if ("string" == typeof e.regex) return new RegExp(e.regex, e.flags);\n      if (e.regex instanceof RegExp) return void 0 !== e.flags ? new RegExp(e.regex.source, e.flags) : e.regex;\n      throw "Invalid regex";\n    }().test(r);\n    if ("color" === e.type) return p(r, e.color);\n\n    if ("and" === e.type) {\n      var t,\n          n = c(e.operands);\n\n      try {\n        for (n.s(); !(t = n.n()).done;) {\n          if (!s(r, t.value)) return !1;\n        }\n      } catch (r) {\n        n.e(r);\n      } finally {\n        n.f();\n      }\n\n      return !0;\n    }\n\n    if ("or" === e.type) {\n      var o,\n          i = c(e.operands);\n\n      try {\n        for (i.s(); !(o = i.n()).done;) {\n          if (s(r, o.value)) return !0;\n        }\n      } catch (r) {\n        i.e(r);\n      } finally {\n        i.f();\n      }\n\n      return !1;\n    }\n\n    return "not" === e.type && !s(r, e.operand);\n  }\n\n  !function (r) {\n    r.length = "length", r.getPropertyPriority = "getPropertyPriority", r.getPropertyValue = "getPropertyValue", r.item = "item", r.removeProperty = "removeProperty", r.setProperty = "setProperty", r.parentRule = "parentRule";\n  }(u || (u = {})), function (r) {\n    r.backgroundColor = "backgroundColor", r.borderBlockEndColor = "borderBlockEndColor", r.borderBlockStartColor = "borderBlockStartColor", r.borderBottomColor = "borderBottomColor", r.borderColor = "borderColor", r.borderInlineEndColor = "borderInlineEndColor", r.borderInlineStartColor = "borderInlineStartColor", r.borderLeftColor = "borderLeftColor", r.borderRightColor = "borderRightColor", r.borderTopColor = "borderTopColor", r.caretColor = "caretColor", r.color = "color", r.columnRuleColor = "columnRuleColor", r.floodColor = "floodColor", r.lightingColor = "lightingColor", r.outlineColor = "outlineColor", r.stopColor = "stopColor", r.textDecorationColor = "textDecorationColor", r.textEmphasisColor = "textEmphasisColor", r.webkitTapHighlightColor = "webkitTapHighlightColor", r.webkitTextFillColor = "webkitTextFillColor", r.webkitTextStrokeColor = "webkitTextStrokeColor";\n  }(a || (a = {})), l();\n\n  var p = function p(r, e) {\n    var t = l()(r),\n        n = l()(e);\n    return void 0 === t ? void 0 === n : void 0 !== n && t[0] == n[0] && t[1] == n[1] && t[2] == n[2] && Math.abs(t[3] - n[3]) < .01;\n  };\n\n  function y(r, e) {\n    (null == e || e > r.length) && (e = r.length);\n\n    for (var t = 0, n = new Array(e); t < e; t++) {\n      n[t] = r[t];\n    }\n\n    return n;\n  }\n\n  function v(r, e) {\n    var t = e.id;\n    return !(r.domsiChildrenMatch[t].length > 0 || !function (r, e) {\n      if (!e.children) return !0;\n\n      for (var t = 0, n = Object.values(e.children); t < n.length; t++) {\n        var i = n[t],\n            u = i.type,\n            a = i.selector.id,\n            l = r.domsiChildrenMatch[a].length;\n        if ("single" == u && 0 == l) return !1;\n\n        if ("multiple" == u) {\n          if (void 0 !== i.count && !o(l, i.count)) return !1;\n        } else {\n          if ("optional" == u) return !0;\n          if ("none" == u && l > 0) return !1;\n        }\n      }\n\n      return !0;\n    }(r, e) || !function (r, e) {\n      return !(void 0 !== e.tagName && !function (r, e) {\n        return o((r instanceof Element ? r.tagName : "").toLowerCase(), e);\n      }(r, e.tagName) || void 0 !== e.attribute && !function (r, e) {\n        if (void 0 === e) return !0;\n        if (!(r instanceof Element)) return !1;\n\n        for (var t = 0, n = Object.entries(e); t < n.length; t++) {\n          var u = (f = 2, function (r) {\n            if (Array.isArray(r)) return r;\n          }(c = n[t]) || function (r, e) {\n            var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];\n\n            if (null != t) {\n              var n,\n                  o,\n                  i = [],\n                  u = !0,\n                  a = !1;\n\n              try {\n                for (t = t.call(r); !(u = (n = t.next()).done) && (i.push(n.value), !e || i.length !== e); u = !0) {\n                  ;\n                }\n              } catch (r) {\n                a = !0, o = r;\n              } finally {\n                try {\n                  u || null == t["return"] || t["return"]();\n                } finally {\n                  if (a) throw o;\n                }\n              }\n\n              return i;\n            }\n          }(c, f) || function (r, e) {\n            if (r) {\n              if ("string" == typeof r) return i(r, e);\n              var t = Object.prototype.toString.call(r).slice(8, -1);\n              return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? i(r, e) : void 0;\n            }\n          }(c, f) || function () {\n            throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n          }()),\n              a = u[0],\n              l = u[1];\n          if (!o(r.getAttribute(a) || void 0, l)) return !1;\n        }\n\n        var c, f;\n        return !0;\n      }(r, e.attribute) || void 0 !== e.property && !function (r, e) {\n        if (void 0 === e) return !0;\n\n        for (var t = 0, n = Object.entries(e); t < n.length; t++) {\n          var i = (c = 2, function (r) {\n            if (Array.isArray(r)) return r;\n          }(l = n[t]) || function (r, e) {\n            var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];\n\n            if (null != t) {\n              var n,\n                  o,\n                  i = [],\n                  u = !0,\n                  a = !1;\n\n              try {\n                for (t = t.call(r); !(u = (n = t.next()).done) && (i.push(n.value), !e || i.length !== e); u = !0) {\n                  ;\n                }\n              } catch (r) {\n                a = !0, o = r;\n              } finally {\n                try {\n                  u || null == t["return"] || t["return"]();\n                } finally {\n                  if (a) throw o;\n                }\n              }\n\n              return i;\n            }\n          }(l, c) || function (r, e) {\n            if (r) {\n              if ("string" == typeof r) return y(r, e);\n              var t = Object.prototype.toString.call(r).slice(8, -1);\n              return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? y(r, e) : void 0;\n            }\n          }(l, c) || function () {\n            throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n          }()),\n              u = i[0],\n              a = i[1];\n          if (!o(r[u], a)) return !1;\n        }\n\n        var l, c;\n        return !0;\n      }(r, e.property) || void 0 !== e.css && !function (r, e) {\n        if (void 0 === e) return !0;\n        if (!(r instanceof Element)) return !1;\n\n        for (var t = getComputedStyle(r), n = 0, i = Object.entries(e); n < i.length; n++) {\n          var u = (p = 2, function (r) {\n            if (Array.isArray(r)) return r;\n          }(d = i[n]) || function (r, e) {\n            var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];\n\n            if (null != t) {\n              var n,\n                  o,\n                  i = [],\n                  u = !0,\n                  a = !1;\n\n              try {\n                for (t = t.call(r); !(u = (n = t.next()).done) && (i.push(n.value), !e || i.length !== e); u = !0) {\n                  ;\n                }\n              } catch (r) {\n                a = !0, o = r;\n              } finally {\n                try {\n                  u || null == t["return"] || t["return"]();\n                } finally {\n                  if (a) throw o;\n                }\n              }\n\n              return i;\n            }\n          }(d, p) || f(d, p) || function () {\n            throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n          }()),\n              l = u[0],\n              c = u[1];\n\n          if (Object.values(a).includes(l)) {\n            if (!s(t[l], c)) return !1;\n          } else if (!o(t[l], c)) return !1;\n        }\n\n        var d, p;\n        return !0;\n      }(r, e.css) || void 0 !== e.text && !function (r, e) {\n        return o(r instanceof HTMLElement ? r.innerText : void 0, e);\n      }(r, e.text));\n    }(r.htmlNode, e));\n  }\n\n  function m(r, e) {\n    (null == e || e > r.length) && (e = r.length);\n\n    for (var t = 0, n = new Array(e); t < e; t++) {\n      n[t] = r[t];\n    }\n\n    return n;\n  }\n\n  function b(r) {\n    return function (r) {\n      return function (r) {\n        if (Array.isArray(r)) return m(r);\n      }(r) || function (r) {\n        if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);\n      }(r) || function (r, e) {\n        if (r) {\n          if ("string" == typeof r) return m(r, e);\n          var t = Object.prototype.toString.call(r).slice(8, -1);\n          return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? m(r, e) : void 0;\n        }\n      }(r) || function () {\n        throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n      }();\n    }(r).reverse();\n  }\n\n  var h = "<root>";\n\n  function g(r) {\n    return function (r) {\n      if (Array.isArray(r)) return C(r);\n    }(r) || function (r) {\n      if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);\n    }(r) || S(r) || function () {\n      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n    }();\n  }\n\n  function S(r, e) {\n    if (r) {\n      if ("string" == typeof r) return C(r, e);\n      var t = Object.prototype.toString.call(r).slice(8, -1);\n      return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? C(r, e) : void 0;\n    }\n  }\n\n  function C(r, e) {\n    (null == e || e > r.length) && (e = r.length);\n\n    for (var t = 0, n = new Array(e); t < e; t++) {\n      n[t] = r[t];\n    }\n\n    return n;\n  }\n\n  function A(r, e) {\n    var t = {\n      htmlNode: r,\n      parent: e\n    },\n        n = [];\n    return r.childNodes.forEach(function (r) {\n      n.push(A(r, t));\n    }), t.children = n, t.htmlNode.domsiNode = t, t;\n  }\n\n  function w(r, e) {\n    var t = r.domsiChildrenMatch[e.id].map(function (r) {\n      return j(r, e);\n    });\n    return t.reverse(), t;\n  }\n\n  function j(r, e) {\n    var t = {};\n    if (e.children) for (var n = function n() {\n      var e,\n          n,\n          u = (e = i[o], n = 2, function (r) {\n        if (Array.isArray(r)) return r;\n      }(e) || function (r, e) {\n        var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];\n\n        if (null != t) {\n          var n,\n              o,\n              i = [],\n              u = !0,\n              a = !1;\n\n          try {\n            for (t = t.call(r); !(u = (n = t.next()).done) && (i.push(n.value), !e || i.length !== e); u = !0) {\n              ;\n            }\n          } catch (r) {\n            a = !0, o = r;\n          } finally {\n            try {\n              u || null == t["return"] || t["return"]();\n            } finally {\n              if (a) throw o;\n            }\n          }\n\n          return i;\n        }\n      }(e, n) || S(e, n) || function () {\n        throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n      }()),\n          a = u[0],\n          l = u[1],\n          c = l.type,\n          f = l.transparent,\n          d = l.selector,\n          s = d.id,\n          p = void 0;\n\n      if ("single" == c) {\n        var y = r.domsiChildrenMatch[s];\n        p = j(y[y.length - 1], d);\n      } else if ("multiple" == c) (p = r.domsiChildrenMatch[s].map(function (r) {\n        return j(r, d);\n      })).reverse();else {\n        if ("optional" != c) return "continue";\n        var v = r.domsiChildrenMatch[s];\n        p = v.length > 0 ? j(v[0], d) : void 0;\n      }\n\n      p && (t[a] = p), f && "single" == c && (t = Object.assign({}, p.children, t));\n    }, o = 0, i = Object.entries(e.children); o < i.length; o++) {\n      n();\n    }\n    return {\n      node: r.htmlNode,\n      children: t\n    };\n  }\n\n  var x = new Set(["undefined", "boolean", "number", "string"]);\n\n  function O(r) {\n    return (O = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (r) {\n      return _typeof(r);\n    } : function (r) {\n      return r && "function" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : _typeof(r);\n    })(r);\n  }\n\n  function I(r) {\n    return function (r) {\n      if (Array.isArray(r)) return E(r);\n    }(r) || function (r) {\n      if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);\n    }(r) || function (r, e) {\n      if (r) {\n        if ("string" == typeof r) return E(r, e);\n        var t = Object.prototype.toString.call(r).slice(8, -1);\n        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? E(r, e) : void 0;\n      }\n    }(r) || function () {\n      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n    }();\n  }\n\n  function E(r, e) {\n    (null == e || e > r.length) && (e = r.length);\n\n    for (var t = 0, n = new Array(e); t < e; t++) {\n      n[t] = r[t];\n    }\n\n    return n;\n  }\n\n  function N(r, e, t, n, o) {\n    return {\n      selectorName: r,\n      validate: V(e, t, n, o)\n    };\n  }\n\n  function T(r, e) {\n    var t = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n        n = new Set(e),\n        o = [];\n    return t && (n.add(void 0), o.push("undefined")), o.push.apply(o, I(e.map(function (r) {\n      return JSON.stringify(r);\n    }))), {\n      selectorName: r,\n      validate: V(function (r) {\n        return n.has(r);\n      }, o)\n    };\n  }\n\n  function M(r, e, t, n, o) {\n    var i = [].concat(I(t), [r]);\n    return {\n      selectorName: r,\n      validate: function validate(r, t, u) {\n        if (!e(r)) if (x.has(O(r))) u({\n          type: "Invalid type",\n          provided: O(r),\n          expected: i\n        });else if (null !== r) {\n          if (a = r, l = n, Object.prototype.hasOwnProperty.call(a, l)) {\n            var a,\n                l,\n                c = r[n];\n            t()(r, o[c]);\n          } else u({\n            type: "Missing field",\n            expected: n\n          });\n        } else u({\n          type: "Invalid type",\n          provided: "null",\n          expected: i\n        });\n      }\n    };\n  }\n\n  function V(r, e, t, n) {\n    return function (o, i, u) {\n      var a, l;\n      r && r(o) || (void 0 !== o ? null !== o ? t && ((a = o, l = new Set(t), Object.keys(a).filter(function (r) {\n        return !l.has(r);\n      })).forEach(function (r) {\n        u({\n          type: "Invalid field",\n          provided: r,\n          expected: t\n        });\n      }), t.forEach(function (r) {\n        var e = i(r),\n            t = n ? n(r) : void 0;\n        e(o[r], t);\n      })) : u({\n        type: "Invalid type",\n        provided: "null",\n        expected: e\n      }) : u({\n        type: "Invalid type",\n        provided: "undefined",\n        expected: e\n      }));\n    };\n  }\n\n  function k(r) {\n    return function (e) {\n      return r[e];\n    };\n  }\n\n  function P(r, e, t) {\n    var n = {},\n        o = N("".concat(r, "CompareEqualityValueSelector"), function () {\n      return !1;\n    }, ["Object"], ["type", "operator", "value"], k({\n      type: "compare",\n      operator: T("Equality operator", ["==", "!=", "===", "!=="]),\n      value: n\n    })),\n        i = N("".concat(r, "CompareOrderValueSelector"), function () {\n      return !1;\n    }, ["Object"], ["type", "operator", "value"], k({\n      type: "compare",\n      operator: T("Equality operator", [">", ">=", "<", "<="]),\n      value: n\n    })),\n        u = N("".concat(r, "CompareOrderValueSelector"), function () {\n      return !1;\n    }, ["Object"], ["type", "operand"], k({\n      type: "not",\n      operand: n\n    })),\n        a = N("".concat(r, "CompareOrderValueSelector"), function () {\n      return !1;\n    }, ["Object"], ["type", "operands"], k({\n      type: "not",\n      operands: n\n    })),\n        l = "".concat(r, "ValueSelector");\n    return Object.assign(n, M(l, e, t, "type", {\n      undefined: U,\n      "null": D,\n      compare: M(l, function () {\n        return !1;\n      }, [], "operator", {\n        "==": o,\n        "!=": o,\n        "===": o,\n        "!==": o,\n        ">": i,\n        ">=": i,\n        "<": i,\n        "<=": i\n      }),\n      regex: J,\n      and: a,\n      or: a,\n      not: u\n    })), n;\n  }\n\n  function R(r) {\n    return (R = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (r) {\n      return _typeof(r);\n    } : function (r) {\n      return r && "function" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : _typeof(r);\n    })(r);\n  }\n\n  var U = N("UndefinedValueSelector", function () {\n    return !1;\n  }, ["Object"], ["type"], function () {\n    return "undefined";\n  }),\n      D = N("NullValueSelector", function () {\n    return !1;\n  }, ["Object"], ["type"], function () {\n    return "null";\n  }),\n      $ = N("RegexValue", function (r) {\n    return "string" == typeof r || r instanceof RegExp;\n  }, ["string", "RegExp"]),\n      B = N("RegexFlags", function () {\n    return !1;\n  }, ["undefined", "string"]),\n      J = N("RegexValueSelector", function () {\n    return !1;\n  }, ["Object"], ["type", "regex", "flags"], k({\n    type: "regex",\n    regex: $,\n    flags: B\n  })),\n      L = P("TagName", function (r) {\n    return ["undefined", "string"].includes(R(r));\n  }, ["undefined", "string"]),\n      q = P("Count", function (r) {\n    return ["undefined", "number"].includes(R(r));\n  }, ["undefined", "number"]),\n      F = P("Attrribute", function (r) {\n    return ["undefined", "number", "string"].includes(R(r));\n  }, ["undefined", "number", "string"]),\n      H = N("AttributeSelector", function (r) {\n    return void 0 === r;\n  }, ["undefined", "AttributeSelector"], void 0, function () {\n    return F;\n  }),\n      _ = P("Property", function (r) {\n    return ["undefined", "number", "string"].includes(R(r));\n  }, ["undefined", "number", "string"]),\n      W = N("PropertySelector", function (r) {\n    return void 0 === r;\n  }, ["undefined", "PropertySelector"], void 0, function () {\n    return _;\n  }),\n      z = P("Color", function (r) {\n    return ["undefined", "string"].includes(R(r));\n  }, ["undefined", "string"]),\n      G = P("CSS", function (r) {\n    return ["undefined", "number", "string"].includes(R(r));\n  }, ["undefined", "number", "string"]),\n      K = N("CssSelector", function (r) {\n    return void 0 === r;\n  }, ["undefined", "CssSelector"], void 0, function (r) {\n    return r.startsWith("color") || r.includes("Color") ? z : G;\n  }),\n      Q = P("Text", function (r) {\n    return ["undefined", "string"].includes(R(r));\n  }, ["undefined", "string", "Text"]),\n      X = function () {\n    var r = {},\n        e = N("ChildSelector", function () {\n      return !1;\n    }, ["Object"], ["type", "transparent", "count", "selector"], k({\n      type: T("ChildType", ["single", "multiple", "none"]),\n      transparent: T("Transparent", [!1, !0], !0),\n      count: q,\n      selector: r\n    })),\n        t = N("ChildrenSelector", function (r) {\n      return void 0 === r;\n    }, ["undefined", "ChildrenSelector"], void 0, function () {\n      return e;\n    });\n    return Object.assign(r, N("NodeSelector", function () {\n      return !1;\n    }, ["Object"], ["tagName", "attribute", "property", "css", "text", "children"], k({\n      tagName: L,\n      attribute: H,\n      property: W,\n      css: K,\n      text: Q,\n      children: t\n    }))), {\n      DomsiNodeSelectorValidator: r,\n      DomsiChildSelectorValidator: e,\n      DomsiChildrenSelectorValidator: t\n    };\n  }(),\n      Y = X.DomsiNodeSelectorValidator;\n\n  function Z(r, e) {\n    (null == e || e > r.length) && (e = r.length);\n\n    for (var t = 0, n = new Array(e); t < e; t++) {\n      n[t] = r[t];\n    }\n\n    return n;\n  }\n\n  function rr(r, e) {\n    var t = [];\n    return er(r, e, t, [h]), t;\n  }\n\n  function er(r, e, t, n) {\n    void 0 !== e && ("number" != typeof e && "string" != typeof e ? e.validate(r, function (r) {\n      var e,\n          o = r ? [].concat(function (r) {\n        if (Array.isArray(r)) return Z(r);\n      }(e = n) || function (r) {\n        if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);\n      }(e) || function (r, e) {\n        if (r) {\n          if ("string" == typeof r) return Z(r, e);\n          var t = Object.prototype.toString.call(r).slice(8, -1);\n          return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? Z(r, e) : void 0;\n        }\n      }(e) || function () {\n        throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n      }(), [r]) : n;\n      return function (r, e) {\n        return er(r, e, t, o);\n      };\n    }, function (r) {\n      var o = Object.assign({}, r, {\n        selectorName: e.selectorName,\n        path: n\n      });\n      t.push(o);\n    }) : r !== e && t.push({\n      type: "Invalid constant",\n      provided: r,\n      expected: e\n    }));\n  }\n\n  function tr(r, e) {\n    return nr(r), function (r, e) {\n      var t = function (r) {\n        return JSON.parse(JSON.stringify(r));\n      }(r),\n          n = document,\n          o = function (r) {\n        for (var e = [r], t = 0; t < e.length;) {\n          var n = e[t];\n          if (n.originalSelector = JSON.parse(JSON.stringify(n)), n.id = t, 0 == t && (n.name = h), n.children) for (var o = 0, i = Object.keys(n.children); o < i.length; o++) {\n            var u = i[o],\n                a = n.children[u];\n            a.selector || (a.selector = {}), a.selector.name = n.name + "." + u, e.push(a.selector);\n          }\n          t++;\n        }\n\n        return e;\n      }(t),\n          i = function (r, e) {\n        for (var t = [A(r)], n = 0; n < t.length;) {\n          var o = t[n];\n          o.domsiMatch = g(new Array(e)).map(function () {\n            return !1;\n          }), o.domsiChildrenMatch = g(new Array(e)).map(function () {\n            return [];\n          }), t.push.apply(t, g(o.children)), n++;\n        }\n\n        return t;\n      }(n, o.length);\n\n      return function (r, e) {\n        b(r).forEach(function (r) {\n          b(e).forEach(function (e) {\n            v(e, r) && function (r, e) {\n              r.domsiMatch[e.id] = !0;\n\n              for (var t = r.parent; t;) {\n                t.domsiChildrenMatch[e.id].push(r), t = t.parent;\n              }\n            }(e, r);\n          });\n        });\n      }(o, i), w(i[0], t);\n    }(r);\n  }\n\n  function nr(r) {\n    return rr(r, Y);\n  }\n\n  X.DomsiChildSelectorValidator, X.DomsiChildrenSelectorValidator;\n  var or = {\n    find: function find(r, e) {\n      return tr(r)[0];\n    },\n    findAll: tr,\n    validateSelector: nr\n  };\n  domsi = e["default"];\n})();'}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={exports:{}};return n[t](i,i.exports,e),i.exports}e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r);var t={};(()=>{e.d(t,{default:()=>n});const n={domsiSrc:e(442)}})(),domsi=t.default})();